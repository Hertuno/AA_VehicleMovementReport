#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ЗначениеЗаполнено(Период.ДатаНачала) И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ПечатнаяФорма = Новый ТабличныйДокумент;
		СформироватьНаСервере(ПечатнаяФорма);
		ПечатнаяФорма.ТолькоПросмотр = Истина;
		ПечатнаяФорма.Показать();
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНаСервере(ПечатнаяФорма)
	
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	
	ДанныеЗаполнения = ДанныеЗаполнения();
	
	ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Шапка"));
	
	Для Каждого Данные Из ДанныеЗаполнения Цикл
		МакетСтроки = Макет.ПолучитьОбласть("Строка");
		Если Данные.Свойство("ДатаРеализация") Тогда
			МакетСтроки.Области[0].ЦветФона = WebЦвета.НейтральноЗеленый;
		ИначеЕсли Данные.Свойство("ДатаОприходывания") Тогда
			МакетСтроки.Области[0].ЦветФона = WebЦвета.Лимонный;
		КонецЕсли;
		МакетСтроки.Параметры.Заполнить(Данные); 
		ПечатнаяФорма.Вывести(МакетСтроки);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ДанныеЗаполнения()
	
	Результат = Новый Массив;
	
	Автомобили				= Автомобили();
	МестоАвтомобилей		= МестоАвтомобилей(Автомобили);
	ДвиженияАвтомобилей		= ДвиженияАвтомобилей(Автомобили);
	
	ПоступленияАвтомобилей	= ПоступленияАвтомобилей(ДвиженияАвтомобилей);
	ВыпискиПоступлений		= ВыпискиПоступлений(ПоступленияАвтомобилей);
	ФактурыПоступлений		= ФактурыПоступлений(ПоступленияАвтомобилей);
	ДопРасходыПоступлений	= ДопРасходыПоступлений(ПоступленияАвтомобилей);
	
	ЗаказНарядыАвтомобилей	= ЗаказНарядыАвтомобилей(Автомобили);
	РасчетыЗаказНарядов		= РасчетыЗаказНарядов(ЗаказНарядыАвтомобилей);
	
	РеализацииАвтомобилей	= РеализацииАвтомобилей(ДвиженияАвтомобилей);
	ВыпискиРеализаций		= ВыпискиРеализаций(РеализацииАвтомобилей);
	ФактурыРеализаций		= ФактурыРеализаций(РеализацииАвтомобилей);
	РасчетыРеализаций		= РасчетыРеализаций(РеализацииАвтомобилей);

	НомерСтроки = 0;
	Для Каждого Автомобиль Из Автомобили Цикл
		
		НомерСтроки				= НомерСтроки + 1;
		Поступление				= ПоступленияАвтомобилей[Автомобиль];
		ФактураПолученный		= ФактурыПоступлений[Поступление];
		ВыпискиПоступления		= ВыпискиПоступлений[Поступление];
		ДопРасходыПоступления	= ДопРасходыПоступлений[Поступление];
		Реализация				= РеализацииАвтомобилей[Автомобиль];
		ФактураВыданный			= ФактурыРеализаций[Реализация];
		ВыпискиРеализации		= ВыпискиРеализаций[Реализация];
		РасчетыРеализации		= РасчетыРеализаций[Реализация];
		ЗаказНаряды				= ЗаказНарядыАвтомобилей[Автомобиль];
		
		СтрокаДанных = Новый Структура;
		СтрокаДанных.Вставить("НомерСтроки",					НомерСтроки);
		СтрокаДанных.Вставить("Марка",							Автомобиль.Марка.Наименование);
		СтрокаДанных.Вставить("РасшифровкаМарка",				Автомобиль.Марка);
		СтрокаДанных.Вставить("ВариантКомплектации",			Автомобиль.ВариантКомплектации.Наименование);
		СтрокаДанных.Вставить("РасшифровкаВариантКомплектации",	Автомобиль.ВариантКомплектации);
		СтрокаДанных.Вставить("Модель",							Автомобиль.Модель.Наименование);
		СтрокаДанных.Вставить("РасшифровкаМодель",				Автомобиль.Модель);
		СтрокаДанных.Вставить("VIN",							Автомобиль.VIN);
		СтрокаДанных.Вставить("Цвет",							Автомобиль.Цвет);
		СтрокаДанных.Вставить("ГодВыпуска",						Автомобиль.ГодВыпуска);
		СтрокаДанных.Вставить("НомерШасси",						Автомобиль.НомерШасси);
		СтрокаДанных.Вставить("Местонахождение",				МестоАвтомобилей[Автомобиль]);
		
		СтрокаПоступления = Неопределено;
		Если ЗначениеЗаполнено(Поступление) Тогда
			Отбор = Новый Структура("Автомобиль", Автомобиль);
			СтрокаПоступления = Поступление.Автомобили.НайтиСтроки(Отбор);
			СтрокаДанных.Вставить("ДатаОприходывания",		Поступление.Дата);
			СтрокаДанных.Вставить("Поставщик",				Поступление.Контрагент.Наименование);
			СтрокаДанных.Вставить("РасшифровкаПоставщик",	Поступление.Контрагент);
			СтрокаДанных.Вставить("СуммаОплаты",			Поступление.еа_Оплата.Итог("Сумма"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаПоступления) Тогда
			СтрокаДанных.Вставить("СуммаПриходная", СтрокаПоступления[0].Сумма);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ФактураПолученный) Тогда
			СтрокаДанных.Вставить("НомерСчетФактуры",	ФактураПолученный.Номер);
			СтрокаДанных.Вставить("ДатаСчетФактуры",	ФактураПолученный.Дата);
		КонецЕсли;
		
		Покупатель			= Неопределено;
		СтрокаРеализации	= Неопределено;
		Если ЗначениеЗаполнено(Реализация) Тогда
			Отбор = Новый Структура("Автомобиль", Автомобиль);
			Покупатель = Реализация.Контрагент;
			СтрокаРеализации = Реализация.Автомобили.НайтиСтроки(Отбор);
			СтрокаДанных.Вставить("ДатаРеализация",			Реализация.Дата);
			СтрокаДанных.Вставить("Менеджер",				Реализация.Менеджер.Наименование);
			СтрокаДанных.Вставить("РасшифровкаМенеджер",	Реализация.Менеджер);
			СтрокаДанных.Вставить("Оплата",					Реализация.еа_Оплата.Итог("Сумма"));
		КонецЕсли;
		
		СтрокаФактурыВыданной = Неопределено;
		Если ЗначениеЗаполнено(ФактураВыданный) Тогда
			Отбор = Новый Структура("Номенклатура", Автомобиль);
			СтрокаФактурыВыданной = ФактураВыданный.Товары.НайтиСтроки(Отбор); 
			СтрокаДанных.Вставить("НомерСчетФактура",	ФактураВыданный.Номер);
			СтрокаДанных.Вставить("ДатаСчетФактура",	ФактураВыданный.Дата);
			СтрокаДанных.Вставить("ЦенаПродажиПолная",	ФактураВыданный.СуммаДокумента);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаФактурыВыданной) Тогда
			СтрокаДанных.Вставить("СтоимостьСчетФактура", СтрокаФактурыВыданной[0].Сумма); 
		КонецЕсли;
		
		КонтактнаяИнформация = Неопределено;
		Если ЗначениеЗаполнено(Покупатель) Тогда
			СтрокаДанных.Вставить("Покупатель",				Покупатель.Наименование);
			СтрокаДанных.Вставить("РасшифровкаПокупатель",	Покупатель); 
			СтрокаДанных.Вставить("ФормаСобственности",		Покупатель.ФормаСобственности);
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрокаРеализации) Тогда
			СтавкаНДС = СтрокаРеализации[0].СтавкаНДС.Ставка;
			ВаловыйДоход = СтрокаРеализации[0].Сумма - СтрокаРеализации[0].СебестоимостьАвтомобиля;
			ВаловыйДоходБезНДС = ВаловыйДоход - (ВаловыйДоход * СтавкаНДС / (100 + СтавкаНДС));
			ПроцентНаценки = ВаловыйДоход / СтрокаРеализации[0].Сумма * 100;
			СтрокаДанных.Вставить("ЦенаПродажи", 		СтрокаРеализации[0].Сумма);
			СтрокаДанных.Вставить("СкидкаРазмер",		СтрокаРеализации[0].СуммаСкидки);
			СтрокаДанных.Вставить("НДС",				СтрокаРеализации[0].СуммаНДС);
			СтрокаДанных.Вставить("ВаловыйДоход",		ВаловыйДоход);
			СтрокаДанных.Вставить("ВаловыйДоходБезНДС",	ВаловыйДоход);
			СтрокаДанных.Вставить("ПроцентНаценки",		ПроцентНаценки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыпискиРеализации) Тогда
			СтрокаДанных.Вставить("ПокупательОплата", ВыпискиРеализации.Сумма);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗаказНаряды) Тогда
			Номер = 0;
			ДоработкаЗапчасти = 0;
			ДоработкаУслуги = 0;
			ДоработкиСкидка = 0;
			Для Каждого ЗаказНаряд Из ЗаказНаряды Цикл
				Если Номер = 3 Тогда Прервать; Иначе Номер = Номер + 1 КонецЕсли;
				Транш = "Транш" + Строка(Номер);
				СтрокаДанных.Вставить("ЗаказНарядНомер" + Транш, ЗаказНаряд.Номер);
				СтрокаДанных.Вставить("ЗаказНарядДата"	+ Транш, ЗаказНаряд.Дата);
				СтрокаДанных.Вставить("ЗаказНарядСумма" + Транш, ЗаказНаряд.СуммаДокумента);
				ДоработкаЗапчасти = ДоработкаЗапчасти + ЗаказНаряд.Товары.Итог("Сумма");
				ДоработкиСкидка = ДоработкиСкидка + ЗаказНаряд.Товары.Итог("СуммаСкидки");
				ДоработкаУслуги = ДоработкаУслуги + ЗаказНаряд.Автоработы.Итог("Сумма");
				ДоработкиСкидка = ДоработкиСкидка + ЗаказНаряд.Автоработы.Итог("СуммаСкидки"); 
			КонецЦикла;
			СтрокаДанных.Вставить("ДоработкаЗапчасти",		ДоработкаЗапчасти);
			СтрокаДанных.Вставить("ДоработкаУслуги",		ДоработкаУслуги);
			СтрокаДанных.Вставить("СкидкаДоработкиРазмер",	ДоработкиСкидка);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыпискиПоступления) Тогда
			Номер = 0;
			Для Каждого ВыпискаПоступления Из ВыпискиПоступления Цикл
				Если Номер = 3 Тогда Прервать; Иначе Номер = Номер + 1 КонецЕсли;
				Транш = "Транш" + Строка(Номер);
				СтрокаДанных.Вставить("ПоступлениеДата"	 + Транш, ВыпискаПоступления.Документ.Дата);
				СтрокаДанных.Вставить("ПоступлениеСумма" + Транш, ВыпискаПоступления.Сумма);
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДопРасходыПоступления) Тогда
			Номер = 0;
			ДопРасходСумма = 0;
			Для Каждого ДопРасход Из ДопРасходыПоступления Цикл
				Если Номер = 2 Тогда Прервать; Иначе Номер = Номер + 1 КонецЕсли;
				Транш = "Транш" + Строка(Номер); 
				СтрокаДанных.Вставить("Доставка" + Транш, ДопРасход.СуммаДокумента);
				ДопРасходСумма = ДопРасходСумма + ДопРасход.СуммаДокумента;
			КонецЦикла;
			СтрокаДанных.Вставить("СтоимостьДоставкиЧужая",	ДопРасходСумма);
		КонецЕсли;
		
		СтрокаДанных.Вставить("СтоимостьДоставкиСвоя", "?");
		
		СтрокаДанных.Вставить("Затраты", "?");
		
		СтрокаДанных.Вставить("Доплата", "?");
		
		Результат.Добавить(СтрокаДанных);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции 

&НаСервере
Функция Автомобили()

	Результат = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Остатки.Автомобиль КАК Автомобиль
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей КАК Остатки
		|ГДЕ
		|	Остатки.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Автомобиль");
		
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция МестоАвтомобилей(Автомобили)
	
	Результат = Новый Соответствие;
	
	Для Каждого Автомобиль из Автомобили Цикл
		Результат.Вставить(Автомобиль, "");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Местоположение.Период КАК Период,
		|	Местоположение.НомерСтроки КАК НомерСтроки,
		|	Местоположение.Активность КАК Активность,
		|	Местоположение.Автомобиль КАК Автомобиль,
		|	Местоположение.Место КАК Место
		|ИЗ
		|	РегистрСведений.еа_МестоположениеАвтомобилей.СрезПоследних(
		|		&ДатаОкончания, Автомобиль В (&Автомобили)
		|	) КАК Местоположение";
	
	Запрос.УстановитьПараметр("Автомобили", Автомобили);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат[РезультатЗапроса.Автомобиль] = РезультатЗапроса.Место;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ДвиженияАвтомобилей(Автомобили)
	
	Результат = Новый Соответствие;
	
	Для Каждого Автомобиль из Автомобили Цикл
		Результат.Вставить(Автомобиль, Новый Массив);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Остатки.Период КАК Период,
		|	Остатки.Регистратор КАК Регистратор,
		|	Остатки.НомерСтроки КАК НомерСтроки,
		|	Остатки.Активность КАК Активность,
		|	Остатки.ВидДвижения КАК ВидДвижения,
		|	Остатки.Автомобиль КАК Автомобиль,
		|	Остатки.СкладКомпании КАК СкладКомпании,
		|	Остатки.СтатусПартии КАК СтатусПартии,
		|	Остатки.Партия КАК Партия,
		|	Остатки.Количество КАК Количество,
		|	Остатки.Сумма КАК Сумма,
		|	Остатки.СуммаНДС КАК СуммаНДС,
		|	Остатки.СуммаБезНДС КАК СуммаБезНДС,
		|	Остатки.СуммаУпр КАК СуммаУпр,
		|	Остатки.СуммаНДСУпр КАК СуммаНДСУпр,
		|	Остатки.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
		|	Остатки.ХозОперация КАК ХозОперация,
		|	Остатки.СтавкаНДС КАК СтавкаНДС,
		|	Остатки.Проект КАК Проект,
		|	Остатки.ДокументПродажи КАК ДокументПродажи
		|ИЗ
		|	РегистрНакопления.ОстаткиАвтомобилей КАК Остатки
		|ГДЕ
		|	Остатки.Автомобиль В(&Автомобили)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос.УстановитьПараметр("Автомобили", Автомобили);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
		
	Пока РезультатЗапроса.Следующий() Цикл
		Результат[РезультатЗапроса.Автомобиль].Добавить(РезультатЗапроса.Регистратор);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПоступленияАвтомобилей(ДвиженияАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Для Каждого Движение Из ДвиженияАвтомобилей Цикл
		Для Каждого Документ Из Движение.Значение Цикл
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеАвтомобилей") Тогда
				Результат.Вставить(Движение.Ключ, Документ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗаказНарядыАвтомобилей(Автомобили) 
	
	Результат = Новый Соответствие;
	
	ВидРемонта = Справочники.ВидыРемонта.НайтиПоКоду("РИ000001"); //Комплектация автомобиля на себестоимость
	//ВидРемонта = Константы.еа_ВидРемонтаПредпродажнаяПодготовка.Получить();
	
	Для Каждого Автомобиль Из Автомобили Цикл
		Результат.Вставить(Автомобиль, Новый Массив);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СводныйЗаказ.Автомобиль КАК Автомобиль,
		|	ЗаказНаряд.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СводныйРемонтныйЗаказ КАК СводныйЗаказ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаряд КАК ЗаказНаряд
		|		ПО СводныйЗаказ.Ссылка = ЗаказНаряд.СводныйРемонтныйЗаказ
		|ГДЕ
		|	ЗаказНаряд.ВидРемонта = &ВидРемонта
		|	И СводныйЗаказ.Автомобиль В(&Автомобили)";
	
	Запрос.УстановитьПараметр("Автомобили", Автомобили);
	Запрос.УстановитьПараметр("ВидРемонта", ВидРемонта);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат[РезультатЗапроса.Автомобиль].Добавить(РезультатЗапроса.Ссылка);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РеализацииАвтомобилей(ДвиженияАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Для Каждого Движение Из ДвиженияАвтомобилей Цикл
		Для Каждого Документ Из Движение.Значение Цикл
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияАвтомобилей") Тогда
				Результат.Вставить(Движение.Ключ, Документ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ФактурыРеализаций(РеализацииАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Реализации = Новый Массив;
	Для Каждого Документ Из РеализацииАвтомобилей Цикл
		Реализации.Добавить(Документ.Значение);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетФактура.Ссылка КАК Ссылка,
		|	СчетФактура.ДокументОснование КАК Основание
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактура
		|ГДЕ
		|	СчетФактура.ДокументОснование В(&Реализации)
		|	И СчетФактура.Проведен
		|	И НЕ СчетФактура.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Реализации", Реализации);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат.Вставить(РезультатЗапроса.Основание, РезультатЗапроса.Ссылка); 
	КонецЦикла;

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ФактурыПоступлений(ПоступленияАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Поступления = Новый Массив;
	Для Каждого Документ Из ПоступленияАвтомобилей Цикл
		Поступления.Добавить(Документ.Значение);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетФактура.Ссылка КАК Ссылка,
		|	СчетФактура.ДокументОснование КАК Основание
		|ИЗ
		|	Документ.СчетФактураПолученный КАК СчетФактура
		|ГДЕ
		|	СчетФактура.ДокументОснование В(&Поступления)
		|	И СчетФактура.Проведен
		|	И НЕ СчетФактура.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Поступления", Поступления);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат.Вставить(РезультатЗапроса.Основание, РезультатЗапроса.Ссылка); 
	КонецЦикла;

	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ДопРасходыПоступлений(ПоступленияАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Поступления = Новый Массив;
	Для Каждого Документ Из ПоступленияАвтомобилей Цикл
		Результат.Вставить(Документ.Значение, Новый Массив);
		Поступления.Добавить(Документ.Значение);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДопРасходы.Ссылка КАК Ссылка,
		|	ДопРасходы.ДокументОснование КАК Основание
		|ИЗ
		|	Документ.ПоступлениеДопРасходов КАК ДопРасходы
		|ГДЕ
		|	ДопРасходы.ДокументОснование В(&Поступления)
		|	И ДопРасходы.Проведен
		|	И НЕ ДопРасходы.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Поступления", Поступления);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат[РезультатЗапроса.Основание].Добавить(РезультатЗапроса.Ссылка); 
	КонецЦикла;

	Возврат Результат; 
	
КонецФункции

&НаСервере
Функция РасчетыЗаказНарядов(ЗаказНарядыАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Если НЕ ЗначениеЗаполнено(ЗаказНарядыАвтомобилей) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ЗаказНаряды = Новый Массив;
	
	Для Каждого ЗаказНарядыАвтомобиля Из ЗаказНарядыАвтомобилей Цикл
		Для Каждого ЗаказНаряд Из ЗаказНарядыАвтомобиля.Значение Цикл
			Результат.Вставить(ЗаказНаряд, Новый Массив);
			ЗаказНаряды.Добавить(ЗаказНаряд);
		КонецЦикла;
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Взаиморасчеты.Период КАК Период,
		|	Взаиморасчеты.Регистратор КАК Регистратор,
		|	Взаиморасчеты.НомерСтроки КАК НомерСтроки,
		|	Взаиморасчеты.Активность КАК Активность,
		|	Взаиморасчеты.ВидДвижения КАК ВидДвижения,
		|	Взаиморасчеты.Контрагент КАК Контрагент,
		|	Взаиморасчеты.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
		|	Взаиморасчеты.Сделка КАК Сделка,
		|	Взаиморасчеты.Сумма КАК Сумма,
		|	Взаиморасчеты.СуммаУпр КАК СуммаУпр,
		|	Взаиморасчеты.СуммаБаз КАК СуммаБаз,
		|	Взаиморасчеты.ХозОперация КАК ХозОперация,
		|	Взаиморасчеты.ВидОперации КАК ВидОперации
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыКомпании КАК Взаиморасчеты
		|ГДЕ
		|	Взаиморасчеты.Регистратор ССЫЛКА Документ.ЗаказНаряд
		|	И Взаиморасчеты.Регистратор В (&ЗаказНаряды)
		|	И Взаиморасчеты.Сделка ССЫЛКА Документ.Выписка";
	
	Запрос.УстановитьПараметр("ЗаказНаряды", ЗаказНаряды);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат[РезультатЗапроса.Регистратор].Добавить(РезультатЗапроса.Сделка);
	КонецЦикла;
		
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РасчетыРеализаций(РеализацииАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Если НЕ ЗначениеЗаполнено(РеализацииАвтомобилей) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Реализации = Новый Массив;
	Для Каждого Реализация Из РеализацииАвтомобилей Цикл
		Результат.Вставить(Реализация.Значение, Новый Массив);
		Реализации.Добавить(Реализация.Значение);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Взаиморасчеты.Период КАК Период,
		|	Взаиморасчеты.Регистратор КАК Регистратор,
		|	Взаиморасчеты.НомерСтроки КАК НомерСтроки,
		|	Взаиморасчеты.Активность КАК Активность,
		|	Взаиморасчеты.ВидДвижения КАК ВидДвижения,
		|	Взаиморасчеты.Контрагент КАК Контрагент,
		|	Взаиморасчеты.ДоговорВзаиморасчетов КАК ДоговорВзаиморасчетов,
		|	Взаиморасчеты.Сделка КАК Сделка,
		|	Взаиморасчеты.Сумма КАК Сумма,
		|	Взаиморасчеты.СуммаУпр КАК СуммаУпр,
		|	Взаиморасчеты.СуммаБаз КАК СуммаБаз,
		|	Взаиморасчеты.ХозОперация КАК ХозОперация,
		|	Взаиморасчеты.ВидОперации КАК ВидОперации
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыКомпании КАК Взаиморасчеты
		|ГДЕ
		|	Взаиморасчеты.Регистратор ССЫЛКА Документ.РеализацияАвтомобилей
		|	И Взаиморасчеты.Регистратор В (&РеализацииАвтомобилей)
		|	И Взаиморасчеты.Сделка ССЫЛКА Документ.Выписка";
	
	Запрос.УстановитьПараметр("РеализацииАвтомобилей", Реализации);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Результат[РезультатЗапроса.Регистратор].Добавить(РезультатЗапроса.Сделка);
	КонецЦикла;
		
	Возврат Результат;
		
КонецФункции

&НаСервере
Функция ВыпискиРеализаций(РеализацииАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Реализации = Новый Массив;
	Для Каждого Реализация Из РеализацииАвтомобилей Цикл
		Результат.Вставить(Реализация.Значение);
		Реализации.Добавить(Реализация.Значение);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Оплаты.ДокументОплаты КАК Документ,
		|	Оплаты.Сумма КАК Сумма,
		|	Оплаты.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РеализацияАвтомобилей.еа_Оплата КАК Оплаты
		|ГДЕ
		|	Оплаты.Ссылка В(&Реализации)";
	Запрос.УстановитьПараметр("Реализации", Реализации);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Данные = Новый Структура("Документ, Сумма");
		ЗаполнитьЗначенияСвойств(Данные, РезультатЗапроса);
		Результат[РезультатЗапроса.Ссылка] = Данные;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВыпискиПоступлений(ПоступленияАвтомобилей)
	
	Результат = Новый Соответствие;
	
	Поступления = Новый Массив;
	Для Каждого Поступление Из ПоступленияАвтомобилей Цикл
		Результат.Вставить(Поступление.Значение, Новый Массив);
		Поступления.Добавить(Поступление.Значение);
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Оплаты.ДокументОплаты КАК Документ,
		|	Оплаты.Сумма КАК Сумма,
		|	Оплаты.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПоступлениеАвтомобилей.еа_Оплата КАК Оплаты
		|ГДЕ
		|	Оплаты.Ссылка В(&Поступления)";
	Запрос.УстановитьПараметр("Поступления", Поступления);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Данные = Новый Структура("Документ, Сумма");
		ЗаполнитьЗначенияСвойств(Данные, РезультатЗапроса);
		Результат[РезультатЗапроса.Ссылка].Добавить(Данные);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
